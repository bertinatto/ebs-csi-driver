apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "chart.fullname" . }}-node-sa
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: node

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "chart.fullname" . }}-node
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: node
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "update"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch", "update"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "chart.fullname" . }}-node-role
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: node
subjects:
  - kind: ServiceAccount
    name: {{ include "chart.fullname" . }}-node-sa
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ include "chart.fullname" . }}-node
  apiGroup: rbac.authorization.k8s.io

---

kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: {{ include "chart.fullname" . }}-node
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: node
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      helm.sh/chart: {{ include "chart.chart" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/component: node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        helm.sh/chart: {{ include "chart.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/component: node
    spec:
      serviceAccount: {{ include "chart.fullname" . }}-node-sa
      hostNetwork: true
      containers:
        - name: csi-driver-registrar
          securityContext:
            privileged: true
          imagePullPolicy: {{ .Values.node.image.pullPolicy }}
          image: "{{ .Values.node.image.repository }}:{{ .Values.node.image.tag }}"
          args:
            - --v=5
            - --csi-address=$(ADDRESS)
            - --mode=node-register
            - --driver-requires-attachment=true
            - --pod-info-mount-version="v1"
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources:
            {{- toYaml .Values.node.resources | nindent 12 }}        
        - name: ebs-plugin
          securityContext:
            privileged: true
          imagePullPolicy: {{ .Values.plugin.image.pullPolicy }}
          image: "{{ .Values.plugin.image.repository }}:{{ .Values.plugin.image.tag }}"
          args:
            - --endpoint=$(CSI_ENDPOINT)
            - --logtostderr
            - --v=5
          env:
            - name: CSI_ENDPOINT
              value: unix:/csi/csi.sock
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.fullname" . }}-aws-secret
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.fullname" . }}-aws-secret
                  key: secret_access_key
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /csi
            - name: device-dir
              mountPath: /dev
          resources:
            {{- toYaml .Values.plugin.resources | nindent 12 }}
      volumes:
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/ebs.csi.aws.com/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
